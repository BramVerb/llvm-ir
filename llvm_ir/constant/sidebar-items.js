initSidebarItems({"enum":[["Constant","See LLVM 12 docs on Constants. Constants can be either values, or expressions involving other constants (see LLVM 12 docs on Constant Expressions)."],["Float","All of these `Float` variants should have data associated with them, but Rust only has `f32` and `f64` floating-point types, and furthermore, it's not clear how to get 16-, 80-, or 128-bit FP constant values through the LLVM C API (the getters seem to only be exposed in the C++ API?)"]],"struct":[["AShr",""],["Add",""],["AddrSpaceCast",""],["And",""],["BitCast",""],["ConstantRef","A `ConstantRef` is a reference to a `Constant`. Most importantly, it implements `AsRef<Constant>` and `Deref<Target = Constant>`. It also has a cheap `Clone` -- only the reference is cloned, not the underlying `Constant`."],["ExtractElement",""],["ExtractValue",""],["FAdd",""],["FCmp",""],["FDiv",""],["FMul",""],["FPExt",""],["FPToSI",""],["FPToUI",""],["FPTrunc",""],["FRem",""],["FSub",""],["GetElementPtr",""],["ICmp",""],["InsertElement",""],["InsertValue",""],["IntToPtr",""],["LShr",""],["Mul",""],["Or",""],["PtrToInt",""],["SDiv",""],["SExt",""],["SIToFP",""],["SRem",""],["Select",""],["Shl",""],["ShuffleVector",""],["Sub",""],["Trunc",""],["UDiv",""],["UIToFP",""],["URem",""],["Xor",""],["ZExt",""]],"trait":[["ConstBinaryOp",""],["ConstUnaryOp",""]]});